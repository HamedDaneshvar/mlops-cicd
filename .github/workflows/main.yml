name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:17.0-alpine
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        volumes:
          - dbdata:/var/lib/postgresql/data
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          FLASK_ENV: testing  # Set the environment variable for testing
        run: |
          pytest

      - name: Build Docker image
        run: |
          docker-compose build

      - name: Run Docker container
        run: |
          docker-compose up -d

volumes:
  dbdata:
